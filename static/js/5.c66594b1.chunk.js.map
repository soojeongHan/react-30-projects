{"version":3,"sources":["projects/1/sounds/sounds.js","projects/1/sounds/boom.wav","projects/1/sounds/clap.wav","projects/1/sounds/hihat.wav","projects/1/sounds/kick.wav","projects/1/sounds/openhat.wav","projects/1/sounds/ride.wav","projects/1/sounds/snare.wav","projects/1/sounds/tink.wav","projects/1/sounds/tom.wav","projects/1/Index.js"],"names":["sounds","Index","divRef","React","useRef","useLayoutEffect","current","focus","useState","key","setKey","removeTranstion","useCallback","e","propertyName","onKeyDown","Array","from","firstChild","childNodes","find","v","dataset","String","keyCode","audio","Audio","includes","lastChild","innerHTML","play","isKey","data_key","className","tabIndex","ref","onTransitionEnd","data-key"],"mappings":"wIAYeA,G,MAFA,CCVA,IAA0B,iCCA1B,IAA0B,iCCA1B,IAA0B,kCCA1B,IAA0B,iCCA1B,IAA0B,oCCA1B,IAA0B,iCCA1B,IAA0B,kCCA1B,IAA0B,iCCA1B,IAA0B,kCC8F1BC,UA1FD,WACZ,IAAMC,EAASC,IAAMC,SAErBD,IAAME,iBAAgB,WACpBH,EAAOI,QAAQC,UACd,IALe,MAMIJ,IAAMK,SAAS,IANnB,mBAMXC,EANW,KAMNC,EANM,KASZC,EAAkBR,IAAMS,aAAY,SAACC,GAClB,cAAnBA,EAAEC,cACNJ,EAAO,MACN,IAEGK,EAAYZ,IAAMS,aAAY,SAACC,GAEnC,IAAMJ,EAAMO,MAAMC,KAAKf,EAAOI,QAAQY,WAAWC,YAAYC,MAAK,SAACC,GACjE,OAAOA,EAAEC,QAAQb,MAAQc,OAAOV,EAAEW,YAGpC,GAAKf,EAAL,CAEA,IAAMgB,EAAQ,IAAIC,MAChB1B,EAAOoB,MAAK,SAACC,GACX,OAAOE,OAAOF,GAAGM,SAASlB,EAAImB,UAAUC,eAIvCJ,IAELA,EAAMK,OACNpB,EAAOD,EAAIa,QAAQb,SAClB,IAEGsB,EAAQ5B,IAAMS,aAClB,SAACoB,GACC,OAAOvB,IAAQuB,EAAW,UAAY,KAExC,CAACvB,IAGH,OACE,qBACEwB,UAAU,OACVlB,UAAW,SAACF,GAAD,OAAOE,EAAUF,IAC5BqB,SAAS,IACTC,IAAKjC,EAJP,SAME,sBAAK+B,UAAU,OAAOG,gBAAiBzB,EAAvC,UACE,sBAAK0B,WAAS,KAAKJ,UAAS,cAASF,EAAM,OAA3C,UACE,oCACA,sBAAME,UAAU,QAAhB,qBAEF,sBAAKI,WAAS,KAAKJ,UAAS,cAASF,EAAM,OAA3C,UACE,oCACA,sBAAME,UAAU,QAAhB,sBAEF,sBAAKI,WAAS,KAAKJ,UAAS,cAASF,EAAM,OAA3C,UACE,oCACA,sBAAME,UAAU,QAAhB,qBAEF,sBAAKI,WAAS,KAAKJ,UAAS,cAASF,EAAM,OAA3C,UACE,oCACA,sBAAME,UAAU,QAAhB,wBAEF,sBAAKI,WAAS,KAAKJ,UAAS,cAASF,EAAM,OAA3C,UACE,oCACA,sBAAME,UAAU,QAAhB,qBAEF,sBAAKI,WAAS,KAAKJ,UAAS,cAASF,EAAM,OAA3C,UACE,oCACA,sBAAME,UAAU,QAAhB,qBAEF,sBAAKI,WAAS,KAAKJ,UAAS,cAASF,EAAM,OAA3C,UACE,oCACA,sBAAME,UAAU,QAAhB,sBAEF,sBAAKI,WAAS,KAAKJ,UAAS,cAASF,EAAM,OAA3C,UACE,oCACA,sBAAME,UAAU,QAAhB,oBAEF,sBAAKI,WAAS,KAAKJ,UAAS,cAASF,EAAM,OAA3C,UACE,oCACA,sBAAME,UAAU,QAAhB,4B","file":"static/js/5.c66594b1.chunk.js","sourcesContent":["import boom from \"./boom.wav\";\r\nimport clap from \"./clap.wav\";\r\nimport hithat from \"./hihat.wav\";\r\nimport kick from \"./kick.wav\";\r\nimport openhat from \"./openhat.wav\";\r\nimport ride from \"./ride.wav\";\r\nimport snare from \"./snare.wav\";\r\nimport tink from \"./tink.wav\";\r\nimport tom from \"./tom.wav\";\r\n\r\nconst sounds = [boom, clap, hithat, kick, openhat, ride, snare, tink, tom];\r\n\r\nexport default sounds;\r\n","export default __webpack_public_path__ + \"static/media/boom.d89f41a5.wav\";","export default __webpack_public_path__ + \"static/media/clap.eb738e52.wav\";","export default __webpack_public_path__ + \"static/media/hihat.0273528c.wav\";","export default __webpack_public_path__ + \"static/media/kick.1d842c55.wav\";","export default __webpack_public_path__ + \"static/media/openhat.482e5231.wav\";","export default __webpack_public_path__ + \"static/media/ride.44e63854.wav\";","export default __webpack_public_path__ + \"static/media/snare.3aa3f943.wav\";","export default __webpack_public_path__ + \"static/media/tink.5b878d5d.wav\";","export default __webpack_public_path__ + \"static/media/tom.52db9c23.wav\";","import React from \"react\";\r\nimport \"./style.css\";\r\nimport sounds from \"./sounds/sounds\";\r\n\r\nconst Index = () => {\r\n  const divRef = React.useRef();\r\n  // 컴포넌트를 로딩하면, 키보드를 바로 눌러도 소리를 재생할 수 있도록 focus() 처리한다.\r\n  React.useLayoutEffect(() => {\r\n    divRef.current.focus();\r\n  }, []);\r\n  const [key, setKey] = React.useState(\"\");\r\n\r\n  // transition이 끝나면, playing 클래스를 제거한다.\r\n  const removeTranstion = React.useCallback((e) => {\r\n    if (e.propertyName !== \"transform\") return;\r\n    setKey(\"\");\r\n  }, []);\r\n\r\n  const onKeyDown = React.useCallback((e) => {\r\n    // drum 클래스의 keys 클래스의 key 값들을 배열로 만들어, e.keyCode값과 dataset의 값이 일치하는 값을 찾아낸다.\r\n    const key = Array.from(divRef.current.firstChild.childNodes).find((v) => {\r\n      return v.dataset.key === String(e.keyCode);\r\n    });\r\n    // key 값이 없으면 return;\r\n    if (!key) return;\r\n    // span tag의 InnerHTML의 값으로 sounds 배열 중 일치하는 값을 찾는다.\r\n    const audio = new Audio(\r\n      sounds.find((v) => {\r\n        return String(v).includes(key.lastChild.innerHTML);\r\n      })\r\n    );\r\n    // audio 값이 없으면 return;\r\n    if (!audio) return;\r\n    // audio를 재생하고, playing 클래스를 추가하여, transition 효과를 낸다.\r\n    audio.play();\r\n    setKey(key.dataset.key);\r\n  }, []);\r\n  // data_key와 key가 같으면 playing class를 추가한다.\r\n  const isKey = React.useCallback(\r\n    (data_key) => {\r\n      return key === data_key ? \"playing\" : \"\";\r\n    },\r\n    [key]\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className=\"drum\"\r\n      onKeyDown={(e) => onKeyDown(e)}\r\n      tabIndex=\"0\"\r\n      ref={divRef}\r\n    >\r\n      <div className=\"keys\" onTransitionEnd={removeTranstion}>\r\n        <div data-key=\"65\" className={`key ${isKey(\"65\")}`}>\r\n          <kbd>A</kbd>\r\n          <span className=\"sound\">clap</span>\r\n        </div>\r\n        <div data-key=\"83\" className={`key ${isKey(\"83\")}`}>\r\n          <kbd>S</kbd>\r\n          <span className=\"sound\">hihat</span>\r\n        </div>\r\n        <div data-key=\"68\" className={`key ${isKey(\"68\")}`}>\r\n          <kbd>D</kbd>\r\n          <span className=\"sound\">kick</span>\r\n        </div>\r\n        <div data-key=\"70\" className={`key ${isKey(\"70\")}`}>\r\n          <kbd>F</kbd>\r\n          <span className=\"sound\">openhat</span>\r\n        </div>\r\n        <div data-key=\"71\" className={`key ${isKey(\"71\")}`}>\r\n          <kbd>G</kbd>\r\n          <span className=\"sound\">boom</span>\r\n        </div>\r\n        <div data-key=\"72\" className={`key ${isKey(\"72\")}`}>\r\n          <kbd>H</kbd>\r\n          <span className=\"sound\">ride</span>\r\n        </div>\r\n        <div data-key=\"74\" className={`key ${isKey(\"74\")}`}>\r\n          <kbd>J</kbd>\r\n          <span className=\"sound\">snare</span>\r\n        </div>\r\n        <div data-key=\"75\" className={`key ${isKey(\"75\")}`}>\r\n          <kbd>K</kbd>\r\n          <span className=\"sound\">tom</span>\r\n        </div>\r\n        <div data-key=\"76\" className={`key ${isKey(\"76\")}`}>\r\n          <kbd>L</kbd>\r\n          <span className=\"sound\">tink</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"sourceRoot":""}